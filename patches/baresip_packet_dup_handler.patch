diff --git a/modules/avcodec/encode.c b/modules/avcodec/encode.c
index 8ce4eb8b..0021e76c 100644
--- a/modules/avcodec/encode.c
+++ b/modules/avcodec/encode.c
@@ -382,6 +382,7 @@ int avcodec_encode_update(struct videnc_state **vesp,
 	return err;
 }
 
+int packet_dup_handler(uint64_t ts, uint8_t *buf, size_t size, int keyframe);
 
 int avcodec_encode(struct videnc_state *st, bool update,
 		   const struct vidframe *frame, uint64_t timestamp)
@@ -389,6 +390,7 @@ int avcodec_encode(struct videnc_state *st, bool update,
 	AVFrame *pict = NULL;
 	AVFrame *hw_frame = NULL;
 	AVPacket *pkt = NULL;
+	static bool update2 = false;
 	int i, err = 0, ret;
 	uint64_t ts;
 
@@ -440,10 +442,11 @@ int avcodec_encode(struct videnc_state *st, bool update,
 		pict->linesize[i] = frame->linesize[i];
 	}
 
-	if (update) {
+	if (update || update2) {
 		debug("avcodec: encoder picture update\n");
 		pict->key_frame = 1;
 		pict->pict_type = AV_PICTURE_TYPE_I;
+		update2 = false;
 	}
 
 	pict->color_range = AVCOL_RANGE_MPEG;
@@ -492,6 +495,10 @@ int avcodec_encode(struct videnc_state *st, bool update,
 
 	ts = video_calc_rtp_timestamp_fix(pkt->pts);
 
+	ret = packet_dup_handler(timestamp, pkt->data, pkt->size, pict->pict_type == AV_PICTURE_TYPE_I);
+	if (ret)
+		update2 = true;
+
 	switch (st->codec_id) {
 
 	case AV_CODEC_ID_H264:
