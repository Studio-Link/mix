From 455cde5086527ebdceaea9ca01b7a2ea95f93d34 Mon Sep 17 00:00:00 2001
From: Sebastian Reimers <hallo@studio-link.de>
Date: Sun, 25 Jun 2023 11:09:27 +0200
Subject: [PATCH] webrtc: add media track sdp direction

---
 include/baresip.h | 12 ++++++------
 src/mediatrack.c  | 44 ++++++++++++++++++++++++++++----------------
 src/peerconn.c    |  8 ++++++--
 webrtc/src/sess.c |  6 +++---
 4 files changed, 43 insertions(+), 27 deletions(-)

diff --git a/include/baresip.h b/include/baresip.h
index 957e68a39..35d784432 100644
--- a/include/baresip.h
+++ b/include/baresip.h
@@ -1701,12 +1701,12 @@ int  peerconnection_new(struct peer_connection **pcp,
 		        peerconnection_gather_h *gatherh,
 		        peerconnection_estab_h,
 		        peerconnection_close_h *closeh, void *arg);
-int  peerconnection_add_audio_track(struct peer_connection *pc,
-			 const struct config *cfg,
-			 struct list *aucodecl);
-int  peerconnection_add_video_track(struct peer_connection *pc,
-			 const struct config *cfg,
-			 struct list *vidcodecl);
+int peerconnection_add_audio_track(struct peer_connection *pc,
+				   const struct config *cfg,
+				   struct list *aucodecl, enum sdp_dir dir);
+int peerconnection_add_video_track(struct peer_connection *pc,
+				   const struct config *cfg,
+				   struct list *vidcodecl, enum sdp_dir dir);
 int  peerconnection_set_remote_descr(struct peer_connection *pc,
 				    const struct session_description *sd);
 int  peerconnection_create_offer(struct peer_connection *sess,
diff --git a/src/mediatrack.c b/src/mediatrack.c
index 37dc5a771..46c9ac346 100644
--- a/src/mediatrack.c
+++ b/src/mediatrack.c
@@ -58,8 +58,10 @@ int mediatrack_start_audio(struct media_track *media,
 
 	info("mediatrack: start audio\n");
 
-	fmt = sdp_media_rformat(stream_sdpmedia(audio_strm(au)), NULL);
-	if (fmt) {
+	struct sdp_media *sdpm = stream_sdpmedia(audio_strm(au));
+	fmt = sdp_media_rformat(sdpm, NULL);
+
+	if (fmt && sdp_media_dir(sdpm) & SDP_SENDONLY) {
 		struct aucodec *ac = fmt->data;
 
 		err = audio_encoder_set(au, ac, fmt->pt, fmt->params);
@@ -102,34 +104,44 @@ int mediatrack_start_video(struct media_track *media)
 
 	info("mediatrack: start video\n");
 
-	fmt = sdp_media_rformat(stream_sdpmedia(video_strm(vid)), NULL);
-	if (fmt) {
-		struct vidcodec *vc = fmt->data;
+	struct sdp_media *sdpm = stream_sdpmedia(video_strm(vid));
+	enum sdp_dir dir = sdp_media_dir(sdpm);
 
-		err  = video_encoder_set(vid, vc, fmt->pt, fmt->params);
-		if (err) {
-			warning("mediatrack: start:"
-				" video_encoder_set error: %m\n", err);
-			return err;
-		}
+	fmt = sdp_media_rformat(sdpm, NULL);
+	if (!fmt) {
+		info("mediatrack: video stream is disabled..\n");
+		return 0;
+	}
 
+	struct vidcodec *vc = fmt->data;
+
+	err = video_encoder_set(vid, vc, fmt->pt, fmt->params);
+	if (err) {
+		warning("mediatrack: start:"
+			" video_encoder_set error: %m\n",
+			err);
+		return err;
+	}
+
+	if (dir & SDP_SENDONLY) {
 		err = video_start_source(vid);
 		if (err) {
 			warning("mediatrack: start:"
-				" video_start_source error: %m\n", err);
+				" video_start_source error: %m\n",
+				err);
 			return err;
 		}
+	}
 
+	if (dir & SDP_RECVONLY) {
 		err = video_start_display(vid, "webrtc");
 		if (err) {
 			warning("mediatrack: start:"
-				" video_start_display error: %m\n", err);
+				" video_start_display error: %m\n",
+				err);
 			return err;
 		}
 	}
-	else {
-		info("mediatrack: video stream is disabled..\n");
-	}
 
 	stream_set_rtcp_interval(video_strm(vid), 1000);
 
diff --git a/src/peerconn.c b/src/peerconn.c
index 8e24fc454..41b2b60b4 100644
--- a/src/peerconn.c
+++ b/src/peerconn.c
@@ -307,7 +307,7 @@ static void mediatrack_close_handler(int err, void *arg)
  */
 int peerconnection_add_audio_track(struct peer_connection *pc,
 				   const struct config *cfg,
-				   struct list *aucodecl)
+				   struct list *aucodecl, enum sdp_dir dir)
 {
 	struct media_track *media;
 	bool offerer;
@@ -332,6 +332,8 @@ int peerconnection_add_audio_track(struct peer_connection *pc,
 		return err;
 	}
 
+	stream_set_ldir(media_get_stream(media), dir);
+
 	mediatrack_set_handlers(media);
 
 	return 0;
@@ -343,7 +345,7 @@ int peerconnection_add_audio_track(struct peer_connection *pc,
  */
 int peerconnection_add_video_track(struct peer_connection *pc,
 				   const struct config *cfg,
-				   struct list *vidcodecl)
+				   struct list *vidcodecl, enum sdp_dir dir)
 {
 	struct media_track *media;
 	bool offerer;
@@ -373,6 +375,8 @@ int peerconnection_add_video_track(struct peer_connection *pc,
 		return err;
 	}
 
+	stream_set_ldir(media_get_stream(media), dir);
+
 	mediatrack_set_handlers(media);
 
 	return 0;
diff --git a/webrtc/src/sess.c b/webrtc/src/sess.c
index 15aa15dd1..78308b7a4 100644
--- a/webrtc/src/sess.c
+++ b/webrtc/src/sess.c
@@ -152,14 +152,14 @@ int session_start(struct session *sess,
 	}
 
 	err = peerconnection_add_audio_track(sess->pc, config,
-					     baresip_aucodecl());
+					     baresip_aucodecl(), SDP_SENDRECV);
 	if (err) {
 		warning("demo: add_audio failed (%m)\n", err);
 		return err;
 	}
 
-	err = peerconnection_add_video_track(sess->pc, config,
-					     baresip_vidcodecl());
+	err = peerconnection_add_video_track(
+		sess->pc, config, baresip_vidcodecl(), SDP_SENDRECV);
 	if (err) {
 		warning("demo: add_video failed (%m)\n", err);
 		return err;
